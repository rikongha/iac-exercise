version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.3

commands:
  # Reusable Job Code
  print_pipeline_id:
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>

  print_workflow_id:
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>

  # Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
          # TODO:  update script to accept arguments and update command to use script
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  # Infrastructure Creation
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - print_workflow_id:
          id: ${CIRCLE_WORKFLOW_ID:0:5}
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template-infra.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      # Uncomment the line below to simulate failure
      # - run: return 1

  # Config and Deploy
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["1a:9f:42:45:b1:33:75:3d:c3:c6:72:66:7b:49:e7:ba"]
      - run:
          name: Install Ansible
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible
      - run:
          name: Get instance IP
          command: |
            ./get-ip-addr.sh
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

workflows:
  auto-workflow:
    jobs:
      # - create_infrastructure
      # - configure_infrastructure
      - smoke_test
